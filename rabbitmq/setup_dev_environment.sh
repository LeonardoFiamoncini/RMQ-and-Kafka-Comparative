#!/bin/bash

echo "=============================="
echo "Iniciando configura√ß√£o do ambiente de desenvolvimento..."
echo "=============================="

# Fun√ß√£o para verificar se um comando existe
command_exists() {
    command -v "$1" &> /dev/null
}

# Atualizar pacotes
echo "üîÑ Atualizando lista de pacotes..."
sudo apt update && sudo apt upgrade -y

# Python 3
if command_exists python3; then
    echo "‚úÖ Python3 j√° est√° instalado"
else
    echo "üöÄ Instalando Python3..."
    sudo apt install -y python3
fi

# Pip
if command_exists pip3; then
    echo "‚úÖ pip3 j√° est√° instalado"
else
    echo "üöÄ Instalando pip3..."
    sudo apt install -y python3-pip
fi

# Venv
if python3 -m venv --help &> /dev/null; then
    echo "‚úÖ M√≥dulo venv j√° est√° dispon√≠vel"
else
    echo "üöÄ Instalando m√≥dulo venv..."
    sudo apt install -y python3-venv
fi

# Docker
if command_exists docker; then
    echo "‚úÖ Docker j√° est√° instalado"
else
    echo "üöÄ Instalando Docker via reposit√≥rio oficial..."
    sudo apt install -y ca-certificates curl gnupg lsb-release software-properties-common

    sudo mkdir -p /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
        sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
      https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    sudo apt update
    sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
fi

# Docker Compose
if docker compose version &> /dev/null; then
    echo "‚úÖ Docker Compose j√° est√° dispon√≠vel"
else
    echo "‚ö†Ô∏è Docker Compose (plugin) n√£o est√° funcional ‚Äî verifique instala√ß√£o manualmente"
fi

# Adicionar usu√°rio ao grupo docker
if groups $USER | grep -q '\bdocker\b'; then
    echo "‚úÖ Usu√°rio j√° est√° no grupo docker"
else
    echo "üöÄ Adicionando usu√°rio ao grupo docker..."
    sudo usermod -aG docker $USER
    echo "‚ö†Ô∏è Fa√ßa logout/login ou reinicie o terminal para aplicar o grupo docker."
fi

# Ambiente virtual - No setup, ele ser√° removido (caso j√° exista) e gerado novamente
rm -rf venv
python3 -m venv venv
sudo apt install python3-full

# Ativar ambiente virtual e instalar depend√™ncias
echo "üêç Ativando ambiente virtual e instalando bibliotecas Python..."
source venv/bin/activate
pip install --upgrade pip
pip install pika

echo "=============================="
echo "‚úÖ Instala√ß√£o finalizada com sucesso!"
echo "‚û°Ô∏è Execute agora: source venv/bin/activate"
echo "‚ö†Ô∏è E lembre-se de reiniciar o terminal para usar Docker sem sudo (se necess√°rio)."
echo "=============================="
